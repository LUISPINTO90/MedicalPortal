services:
  postgres:
    image: postgres:15-alpine
    container_name: medicalportal-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: medical_portal
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - medical_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d medical_portal"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: medicalportal-backend
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: "postgresql://postgres:password123@postgres:5432/medical_portal?schema=public"
      JWT_SECRET: "mi-clave-super-secreta-jwt-2024-medical-portal-12345-abcdef"
      PORT: 3001
      NODE_ENV: development
      FRONTEND_URL: "http://localhost:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - backend_uploads:/app/uploads
      # ðŸ”¥ AGREGAR BIND MOUNT PARA DESARROLLO
      - ./backend/src:/app/src
      - ./backend/prisma:/app/prisma
    networks:
      - medical_network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: medicalportal-frontend
    ports:
      - "8080:8080"
    environment:
      VUE_APP_API_URL: "http://localhost:3001/api"
    depends_on:
      - backend
    volumes:
      # ðŸ”¥ AGREGAR BIND MOUNT PARA DESARROLLO
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    networks:
      - medical_network
    restart: unless-stopped

volumes:
  postgres_data:
  backend_uploads:

networks:
  medical_network:
    driver: bridge
